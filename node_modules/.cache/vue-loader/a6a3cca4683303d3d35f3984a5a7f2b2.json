{"remainingRequest":"/home/meedom/vue/vuedemo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/meedom/vue/vuedemo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/meedom/vue/vuedemo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/meedom/vue/vuedemo/src/components/ContactForm.vue?vue&type=template&id=67929df8&scoped=true&","dependencies":[{"path":"/home/meedom/vue/vuedemo/src/components/ContactForm.vue","mtime":1626625528061},{"path":"/home/meedom/vue/vuedemo/node_modules/cache-loader/dist/cjs.js","mtime":1626625527493},{"path":"/home/meedom/vue/vuedemo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1626625528049},{"path":"/home/meedom/vue/vuedemo/node_modules/cache-loader/dist/cjs.js","mtime":1626625527493},{"path":"/home/meedom/vue/vuedemo/node_modules/vue-loader/lib/index.js","mtime":1626625528049}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"form-container\" }, [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function($event) {\n            $event.preventDefault()\n            return _vm.sendRequest()\n          },\n          keydown: function($event) {\n            if (\n              !$event.type.indexOf(\"key\") &&\n              _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n            ) {\n              return null\n            }\n            $event.preventDefault()\n          }\n        }\n      },\n      [\n        _c(\n          \"b-field\",\n          { attrs: { label: \"Name\" } },\n          [\n            _c(\"b-input\", {\n              model: {\n                value: _vm.contact.name,\n                callback: function($$v) {\n                  _vm.$set(_vm.contact, \"name\", $$v)\n                },\n                expression: \"contact.name\"\n              }\n            })\n          ],\n          1\n        ),\n        _c(\n          \"b-field\",\n          { attrs: { label: \"Surname\" } },\n          [\n            _c(\"b-input\", {\n              model: {\n                value: _vm.contact.surname,\n                callback: function($$v) {\n                  _vm.$set(_vm.contact, \"surname\", $$v)\n                },\n                expression: \"contact.surname\"\n              }\n            })\n          ],\n          1\n        ),\n        _c(\n          \"b-field\",\n          { attrs: { label: \"Email\" } },\n          [\n            _c(\"b-input\", {\n              attrs: { type: \"email\", maxlength: \"30\" },\n              model: {\n                value: _vm.contact.email,\n                callback: function($$v) {\n                  _vm.$set(_vm.contact, \"email\", $$v)\n                },\n                expression: \"contact.email\"\n              }\n            })\n          ],\n          1\n        ),\n        _c(\n          \"b-field\",\n          { attrs: { label: \"Message\" } },\n          [\n            _c(\"b-input\", {\n              attrs: { maxlength: \"200\", type: \"textarea\" },\n              model: {\n                value: _vm.contact.message,\n                callback: function($$v) {\n                  _vm.$set(_vm.contact, \"message\", $$v)\n                },\n                expression: \"contact.message\"\n              }\n            })\n          ],\n          1\n        ),\n        _c(\"label\", [_vm._v(\"Showit \")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.contact.active,\n              expression: \"contact.active\"\n            }\n          ],\n          attrs: { type: \"checkbox\" },\n          domProps: {\n            checked: Array.isArray(_vm.contact.active)\n              ? _vm._i(_vm.contact.active, null) > -1\n              : _vm.contact.active\n          },\n          on: {\n            change: function($event) {\n              var $$a = _vm.contact.active,\n                $$el = $event.target,\n                $$c = $$el.checked ? true : false\n              if (Array.isArray($$a)) {\n                var $$v = null,\n                  $$i = _vm._i($$a, $$v)\n                if ($$el.checked) {\n                  $$i < 0 && _vm.$set(_vm.contact, \"active\", $$a.concat([$$v]))\n                } else {\n                  $$i > -1 &&\n                    _vm.$set(\n                      _vm.contact,\n                      \"active\",\n                      $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                    )\n                }\n              } else {\n                _vm.$set(_vm.contact, \"active\", $$c)\n              }\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"label\", [_vm._v(\"Male \")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.contact.gender,\n              expression: \"contact.gender\"\n            }\n          ],\n          attrs: { type: \"radio\", value: \"male\" },\n          domProps: { checked: _vm._q(_vm.contact.gender, \"male\") },\n          on: {\n            change: function($event) {\n              return _vm.$set(_vm.contact, \"gender\", \"male\")\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"label\", [_vm._v(\"Female \")]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.contact.gender,\n              expression: \"contact.gender\"\n            }\n          ],\n          attrs: { type: \"radio\", value: \"female\" },\n          domProps: { checked: _vm._q(_vm.contact.gender, \"female\") },\n          on: {\n            change: function($event) {\n              return _vm.$set(_vm.contact, \"gender\", \"female\")\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\n          \"ul\",\n          _vm._l(_vm.contact.myArray, function(name) {\n            return _c(\"li\", [_vm._v(_vm._s(name))])\n          }),\n          0\n        ),\n        _c(\n          \"select\",\n          {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.contact.selection,\n                expression: \"contact.selection\"\n              }\n            ],\n            on: {\n              change: function($event) {\n                var $$selectedVal = Array.prototype.filter\n                  .call($event.target.options, function(o) {\n                    return o.selected\n                  })\n                  .map(function(o) {\n                    var val = \"_value\" in o ? o._value : o.value\n                    return val\n                  })\n                _vm.$set(\n                  _vm.contact,\n                  \"selection\",\n                  $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n                )\n              }\n            }\n          },\n          [\n            _c(\"option\", [_vm._v(\"male\")]),\n            _c(\"option\", [_vm._v(\"female\")]),\n            _c(\"option\", [_vm._v(\"none\")])\n          ]\n        ),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.vshow,\n              expression: \"vshow\"\n            }\n          ],\n          staticClass: \"is-primary\",\n          attrs: { type: \"submit\", value: \"Send request\" }\n        })\n      ],\n      1\n    ),\n    _vm.submit\n      ? _c(\"div\", { staticClass: \"result\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"columsns\" },\n            _vm._l(_vm.submitions, function(item, index) {\n              return _c(\"div\", { key: index, staticClass: \"column is-4\" }, [\n                _c(\"h3\", { staticClass: \"submition-id\" }, [\n                  _vm._v(\"Submition number \" + _vm._s(index))\n                ]),\n                _c(\"strong\", [_vm._v(\"Name:\")]),\n                _vm._v(\" \" + _vm._s(item.name)),\n                _c(\"br\"),\n                _c(\"strong\", [_vm._v(\"Surname:\")]),\n                _vm._v(\" \" + _vm._s(item.surname)),\n                _c(\"br\"),\n                _c(\"strong\", [_vm._v(\"Email:\")]),\n                _vm._v(\" \" + _vm._s(item.email)),\n                _c(\"br\"),\n                _c(\"strong\", [_vm._v(\"Message:\")]),\n                _vm._v(\" \" + _vm._s(item.message)),\n                _c(\"br\")\n              ])\n            }),\n            0\n          )\n        ])\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}